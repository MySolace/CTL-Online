<?php

/**
 * Implements hook_install().
 */
function ctl_onboarding_install() {
  $t = get_t();
  drupal_set_message($t("Settings for the CTL Onboarding module are available at !link",
    array('!link' => l($t('Administer > Crisis Text Line > CTL Onboarding'), 'admin/config/ctl/ctl-onboarding'))
  ));
}


/**
 * Implements hook_uninstall().
 */
function ctl_onboarding_uninstall() {
  variable_del('ctl_onboarding_registration_period');
  variable_del('ctl_onboarding_cohort_id');
  variable_del('ctl_onboarding_cohort_registration_start_date');
  variable_del('ctl_onboarding_cohort_registration_finish_date');
  variable_del('ctl_onboarding_trainer_capacity');
  variable_del('ctl_onboarding_slot_trainers');
  variable_del('ctl_onboarding_pages_text');
  variable_del('ctl_onboarding_email');
  variable_del('ctl_onboarding_goodhire');
}


/**
 * Implements hook_schema().
 */
function ctl_onboarding_schema() {
  $schema['ctl_onboarding_cohort'] = array(
    'description' => 'The user who is able to register for training sessions.',
    'fields' => array(
      'cohort_id' => array(
        'type'        => 'int',
        'description' => 'The cohort ID.',
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
      'registration_start_date' => array(
        'type'        => 'int',
        'description' => 'When registration begins.',
        'default'     => 0,
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
      'registration_finish_date' => array(
        'type'        => 'int',
        'description' => 'When registration ends.',
        'default'     => 0,
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
      'training_start_date' => array(
        'type'        => 'int',
        'description' => 'When training begins.',
        'default'     => 0,
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
      'training_finish_date' => array(
        'type'        => 'int',
        'description' => 'When training ends.',
        'default'     => 0,
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
    ),
    'primary key' => array('cohort_id'),
  );
  $schema['ctl_onboarding_slot'] = array(
    'description' => 'The time slot to register for.',
    'fields' => array(
      'cohort_id' => array(
        'type'        => 'int',
        'description' => 'The cohort ID.',
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
      'slot_code' => array(
        'type'        => 'varchar',
        'description' => 'The slot code.',
        'length'      => 7,
        'not null'    => TRUE,
      ),
      'num_trainers' => array(
        'type'        => 'int',
        'description' => 'The number of trainers available.',
        'default'     => 0,
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
      'num_registrants' => array(
        'type'        => 'int',
        'description' => 'The number of potential trainees.',
        'default'     => 0,
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
    ),
    'primary key' => array('cohort_id', 'slot_code'),
  );
  $schema['ctl_onboarding_registrant'] = array(
    'description' => 'The user who is able to register for training sessions.',
    'fields' => array(
      'uid' => array(
        'type'        => 'int',
        'description' => 'The user ID for the registrant.',
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
      'cohort_id' => array(
        'type'        => 'int',
        'description' => 'The cohort ID.',
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
      'slot_code' => array(
        'type'        => 'varchar',
        'description' => 'The time slot code.',
        'length'      => 7,
        'not null'    => TRUE,
      ),
      'status' => array(
        'type'        => 'int',
        'description' => 'The training status of the registrant.',
        'not null'    => TRUE,
        'unsigned'    => TRUE,
      ),
    ),
    'primary key' => array('uid'),
  );
  return $schema;
}


// /**
//  * Implements hook_update_N().
//  */
// function ctl_onboarding_update_7001() {
//   // Create a new slot code field for user profiles.

//   // if (!field_info_field('slot_code')) {
//   //   $field = array(
//   //     'field_name' => 'slot_code',
//   //     'type'       => 'text',
//   //   );
//   //   field_create_field($field);

//   //   $instance = array(
//   //     'field_name'  => 'slot_code',
//   //     'entity_type' => 'user',
//   //     'label'       => 'Slot code',
//   //     'bundle'      => 'user',
//   //     // 'widget'      => array('type' => 'text_textfield'),
//   //   );
//   //   field_create_instance($instance);
//   // }
// }


/**
 * Implements hook_update_N().
 */
function ctl_onboarding_update_7001() {
  // Find all the cohort 8 users and make sure their cohort user field is set
  // to their associated registration info's cohort.
  $query  = 'SELECT uid FROM {ctl_onboarding_registrant} WHERE cohort_id = 8;';
  $result = db_query($query)->fetchAll();
  if (empty($result)) {
    return;
  }
  $uids = array();
  foreach ($result as $v) {
    $uids[] = $v->uid;
  }
  $users = user_load_multiple($uids);
  foreach ($users as $user) {
    $user->field_cohort[LANGUAGE_NONE][0]['value'] = 8;
    field_attach_update('user', $user);
  }
}
