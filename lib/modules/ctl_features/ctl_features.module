<?php

/**
 * Implements hook_node_access().
 */
function ctl_features_node_access($node, $op, $account) {
    if (is_object($node) && $node->type == 'application') {
        if (!user_is_logged_in()) {
            return NODE_ACCESS_DENY;
        }

        if ($node->status == 1) {
            if ($op != 'create' && !user_access('access user profiles')) {
                return NODE_ACCESS_DENY;
            }
        }
    }
}

/**
 * Implements hook_form_alter().
 */
function ctl_features_form_alter(&$form, &$form_state, $form_id) {
    if ($form_id == 'application_node_form' || $form_id == 'application_2_node_form') {
        $form['actions']['draft'] = array(
            '#type' => 'submit',
            '#value' => t('Save as Draft'),
            '#weight' => '1',
            '#submit' => array('_ctl_features_save_draft_submit'),
            '#validate' => array('_ctl_features_save_draft_validate'),
            '#attributes' => array(
                'class' => array('cancel'), // add the class cancel will skip any clientside validation
            ),
        );

        $form['actions']['submit']['#value'] = 'Submit Application';
        $form['actions']['submit']['#validate'][] = '_ctl_features_submit_app';
    }

    else if ($form_id == 'recommendation_node_form') {
        $form['actions']['submit']['#value'] = 'Submit';
    }
}

/**
 * Implements hook_for_validate().
 */
function ctl_features_application_node_form_validate($node, $form, &$form_state) {

}

function _ctl_features_save_draft_validate($form, &$form_state) {
    // Force unpublished
    $form_state['values']['status'] = 0;
    $errors = &drupal_static('form_set_error', NULL, TRUE);
}

function _ctl_features_save_draft_submit($form, &$form_state) {
    drupal_get_messages();
    node_form_submit($form, $form_state);
}

function _ctl_features_submit_app($form, &$form_state) {
    $form_state['values']['status'] = 1;
}

/**
* Implements hook_field_widget_form_alter().
*
* Have boolean fields output the true first.
*/
function ctl_features_field_widget_form_alter(&$element, &$form_state, $context) {
    if ($context['field']['type'] == 'list_boolean' && isset($element['#options'])) {
        $element['#options'] = array_reverse($element['#options'], TRUE);
    }
}
