<?php

module_load_include('inc', 'schedule_recurring', 'field');
module_load_include('inc', 'schedule_recurring', 'entity');

/**
 * Implements hook_permission().
 */
function schedule_recurring_permission() {
  return array(
    // SHIFTS
    'administer schedule recurring settings' => array(
      'title' => t('Administer schedule recurring'),
      'description' => t('Manage settings for recurring scheduling'),
    ),
    'sign up for shifts' => array(
      'title' => t('Sign up for shifts'),
      'description' => t('Sign up for shifts using schedule recurring'),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function schedule_recurring_menu() {
  $items = array();

  $items['admin/config/schedule_recurring'] = array(
    'title' => t('Recurring Scheduler settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('schedule_recurring_admin'),
    'access arguments' => array('administer schedule recurring settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['schedule/available'] = array(
    'title' => t('Shift scheduling'),
    'file' => 'schedule.inc',
    'file path' => drupal_get_path('module', 'schedule_recurring'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('schedule_recurring_available'),
    'access arguments' => array('sign up for shifts'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['schedule/confirm'] = array(
    'title' => t('Shift confirmation'),
    'file' => 'schedule.inc',
    'file path' => drupal_get_path('module', 'schedule_recurring'),
    'page callback' => 'schedule_recurring_confirm',
    'access arguments' => array('sign up for shifts'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['schedule'] = array(
    'title' => t('Schedule'),
    'file' => 'schedule.inc',
    'file path' => drupal_get_path('module', 'schedule_recurring'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('schedule_recurring_schedule'),
    'access arguments' => array('sign up for shifts'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['time-off'] = array(
    'title' => t('Take time off'),
    'description' => t('TODO'),
    'page callback' => 'time_off_request',
    'access arguments' => array('sign up for shifts'),
  );

  $items['time-off/%'] = array(
    'page callback' => 'time_off_view',
    'page arguments' => array(1),
    'access arguments' => array('sign up for shifts'),
  );

  $items['time-off/request'] = array(
    'title' => t('Request time off'),
    'page callback' => 'time_off_add',
    'access arguments' => array('sign up for shifts'),
    'file' => 'entity.inc',
    'file path' => drupal_get_path('module', 'schedule_recurring'),
  );


  return $items;
}

/**
 * Menu callback for module settings.
 */
function schedule_recurring_admin() {
  $form = array();

  $mapping = variable_get('schedule_recurring_shift_mapping', array());
  $mapping[] = array(
    'publisher' => '',
    'subscriber' => '',
  );

  $form['schedule_recurring_shift_mapping'] = array(
    '#theme' => 'table',
    '#tree' => TRUE,
    '#suffix' => t('Reset a role to "- Select -" to remove it from the mapping.'),
    '#rows' => array(),
    '#header' => array('Shift publisher', 'Shift subscriber'),
  );


  foreach ($mapping as $key => $map) {
    $form['schedule_recurring_shift_mapping'][$key]['publisher'] = array(
      '#type' => 'select',
      '#options' => array('' => '- Select -') + user_roles(),
      '#default_value' => $map['publisher'],
    );

    $form['schedule_recurring_shift_mapping'][$key]['subscriber'] = array(
      '#type' => 'select',
      '#options' => array('' => '- Select -') + user_roles(),
      '#default_value' => $map['subscriber'],
    );

    $form['schedule_recurring_shift_mapping']['#rows'][] = array(
      array(
        'data' => &$form['schedule_recurring_shift_mapping'][$key]['publisher'],
      ), array(
        'data' => &$form['schedule_recurring_shift_mapping'][$key]['subscriber'],
      ),
    );
  }

  $form['schedule_recurring_users_per_block'] = array(
    '#type' => 'textfield',
    '#element_validate' => array('element_validate_number'),
    '#title' => t('Maximum number of users to be supervised during a timeslot.'),
    '#default_value' => variable_get('schedule_recurring_users_per_block', 50),
    '#size' => 5,
  );

  $form['schedule_recurring_shift_increment'] = array(
    '#type' => 'textfield',
    '#element_validate' => array('element_validate_number'),
    '#title' => t('Shift interval'),
    '#field_prefix' => 'start a shift every',
    '#field_suffix' => 'minutes',
    '#default_value' => variable_get('schedule_recurring_shift_increment', 30),
    '#size' => 5,
  );

  $form['schedule_recurring_shift_duration'] = array(
    '#type' => 'textfield',
    '#element_validate' => array('element_validate_number'),
    '#title' => t('Shift length'),
    '#field_suffix' => 'minutes',
    '#default_value' => variable_get('schedule_recurring_shift_duration', 240),
    '#size' => 5,
  );

  $form = system_settings_form($form);
  array_unshift($form['#submit'], '_schedule_recurring_admin_submit');

  return $form;
}

function _schedule_recurring_admin_submit($form, &$form_state) {
  foreach ($form_state['values']['schedule_recurring_shift_mapping'] as $key => $map) {
    if (empty($map['publisher']) || empty($map['subscriber'])) {
      unset($form_state['values']['schedule_recurring_shift_mapping'][$key]);
    }
  }

  var_dump($form_state['values']);
}

/**
 * Internal method for who is a setter.
 */
function _schedule_recurring_setters() {
  $setters = &drupal_static(__FUNCTION__);

  if (!isset($setters)) {
    $setters = variable_get('schedule_recurring_shift_setters', array());
    $setters = array_filter(array_values($setters), function ($var) {
      return $var != 0;
    });
  }

  return $setters;
}


function _schedule_recurring_days() {
  return array(
    'Sunday',
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday',
  );
}

function _schedule_recurring_times($include_2400 = FALSE) {
  static $times;

  $accessor = ($include_2400) ? 'include' : 'exclude';
  $interval = variable_get('schedule_recurring_shift_increment');

  if (!isset($times[$accessor])) {
    $times[$accessor] = array();

    for ($i = 0; $i < 24; $i++) {
      for ($j = 0; $j < 60; $j += $interval) {
        $k = $j < 10 ? '0'.$j : $j;
        $times[$accessor][intval($i . $k)] = (($i % 12) ?: 12) . ':'.$k.' '. (($i < 12) ? 'am' : 'pm');
      }
    }

    if ($accessor == 'include') {
      unset($times[$accessor][0]);
      $times[$accessor][2400] = '12:00 am (following day)';
    }
  }

  return $times[$accessor];
}

